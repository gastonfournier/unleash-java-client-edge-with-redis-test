services:
  edge:
    image: unleashorg/unleash-edge:latest
    pull_policy: always
    ports:
      - "3063:3063"
    environment:
      UPSTREAM_URL: http://unleash:4242
      REDIS_URL: redis://redis:6379
      RUST_LOG: "debug"
    command: edge --features-refresh-interval-seconds 1 --metrics-interval-seconds 1 --tokens *:development.unleash-insecure-client-api-token
  redis:
    image: redis:latest
    pull_policy: always
    ports:
      - "6379:6379"
  unleash:
    image: unleashorg/unleash-server:latest
    pull_policy: always
    ports:
      - "4242:4242"
    environment:
      # This points Unleash to its backing database (defined in the `db` section below)
      DATABASE_URL: "postgres://postgres:unleash@db/unleash"
      # Disable SSL for database connections. @chriswk: why do we do this?
      DATABASE_SSL: "false"
      # Changing log levels:
      LOG_LEVEL: "debug"
      # Admin token for testing only
      INIT_ADMIN_API_TOKENS: "*:*.unleash-insecure-admin-api-token"
      INIT_CLIENT_API_TOKENS: "*:development.unleash-insecure-client-api-token"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s
  db:
    expose:
      - "5432"
    image: postgres:15
    environment:
      # create a database called `unleash`
      POSTGRES_DB: "unleash"
      # trust incoming connections blindly (DON'T DO THIS IN PRODUCTION!)
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=postgres",
          "--host=127.0.0.1",
          "--port=5432",
        ]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s
